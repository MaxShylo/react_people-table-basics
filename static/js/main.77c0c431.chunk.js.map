{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","loading","isError","useParams","personData","findParent","useCallback","parentName","possibleParent","find","length","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","setIsError","setLoading","handlePeople","peopleFromServer","useEffect","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.77c0c431.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({\n  to,\n  text,\n}) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\nconst API_URL = 'https://mate-academy.github.io/'\n  + 'react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <NavLink\n      to={`../${person.slug}`}\n      className={classNames(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </NavLink>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n  loading: boolean,\n  isError: boolean,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  loading,\n  isError,\n}) => {\n  const { personData = '' } = useParams();\n\n  const findParent = useCallback((parentName: string | null) => {\n    if (!parentName) {\n      return '-';\n    }\n\n    const possibleParent = people.find(person => person.name === parentName);\n\n    return possibleParent\n      ? <PersonLink person={possibleParent} />\n      : parentName;\n  }, [people]);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {loading\n          ? <Loader />\n          : (isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )) || ((people.length === 0) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )) || (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.name}\n                    className={classNames(\n                      { 'has-background-warning': person.slug === personData },\n                    )}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {findParent(person.motherName)}\n                    </td>\n                    <td>\n                      {findParent(person.fatherName)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePeople = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople([...peopleFromServer]);\n      setLoading(false);\n    } catch {\n      setIsError(true);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    handlePeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <PeopleTable\n        people={people}\n        loading={loading}\n        isError={isError}\n      />\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PageNavLink } from './components/PageNavLink';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personData\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}